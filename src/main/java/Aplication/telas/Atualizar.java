/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package Aplication.telas;

import Aplication.classes.Cidadaos;
import Aplication.api.ApiCEP;
import Aplication.bd.DAO;
import Aplication.dto.EnderecoDto;

import java.awt.event.KeyEvent;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author 825158824
 */
public class Atualizar extends javax.swing.JFrame {

    /** Creates new form Atualizar */
    public Atualizar() {
        super ("Atualizar Cadastro");
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jPanel1 = new javax.swing.JPanel();
        txtIdAtualizar = new javax.swing.JTextField();
        txtTelefoneAtualizar = new javax.swing.JTextField();
        btnConfirmarAtualizar = new javax.swing.JButton();
        btnVoltarAtualizar = new javax.swing.JButton();
        txtNomeAtualizar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNecessidadesAtualizar = new javax.swing.JTextArea();
        txtCidadeAtualizar = new javax.swing.JTextField();
        txtBairroAtualizar = new javax.swing.JTextField();
        txtNumAtualizar = new javax.swing.JTextField();
        txtUFAtualizar = new javax.swing.JTextField();
        txtComplementoAtualizar = new javax.swing.JTextField();
        txtRuaAtualizar = new javax.swing.JTextField();
        txtCepAtualizar = new javax.swing.JTextField();
        txtStatusAtualizar = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Atualizar Pessoa:"));

        txtIdAtualizar.setBorder(javax.swing.BorderFactory.createTitledBorder("Id:"));
        txtIdAtualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdAtualizarKeyPressed(evt);
            }
        });

        txtTelefoneAtualizar.setBorder(javax.swing.BorderFactory.createTitledBorder("Telefone:"));
        txtTelefoneAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefoneAtualizarActionPerformed(evt);
            }
        });
        txtTelefoneAtualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelefoneAtualizarKeyPressed(evt);
            }
        });

        btnConfirmarAtualizar.setText("Confirmar");
        btnConfirmarAtualizar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnConfirmarAtualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConfirmarAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarAtualizarActionPerformed(evt);
            }
        });

        btnVoltarAtualizar.setText("Voltar");
        btnVoltarAtualizar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnVoltarAtualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVoltarAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarAtualizarActionPerformed(evt);
            }
        });

        txtNomeAtualizar.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome:"));
        txtNomeAtualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNomeAtualizarKeyPressed(evt);
            }
        });

        txtNecessidadesAtualizar.setColumns(20);
        txtNecessidadesAtualizar.setRows(5);
        txtNecessidadesAtualizar.setBorder(javax.swing.BorderFactory.createTitledBorder("Necessidades:"));
        txtNecessidadesAtualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNecessidadesAtualizarKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(txtNecessidadesAtualizar);

        txtCidadeAtualizar.setEditable(false);
        txtCidadeAtualizar.setBorder(javax.swing.BorderFactory.createTitledBorder("Cidade:"));
        txtCidadeAtualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtCidadeAtualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCidadeAtualizarKeyPressed(evt);
            }
        });

        txtBairroAtualizar.setBorder(javax.swing.BorderFactory.createTitledBorder("Bairro:"));
        txtBairroAtualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBairroAtualizarKeyPressed(evt);
            }
        });

        txtNumAtualizar.setBorder(javax.swing.BorderFactory.createTitledBorder("Número:"));
        txtNumAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumAtualizarActionPerformed(evt);
            }
        });
        txtNumAtualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumAtualizarKeyPressed(evt);
            }
        });

        txtUFAtualizar.setEditable(false);
        txtUFAtualizar.setActionCommand("<Not Set>");
        txtUFAtualizar.setBorder(javax.swing.BorderFactory.createTitledBorder("UF:"));
        txtUFAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUFAtualizarActionPerformed(evt);
            }
        });
        txtUFAtualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUFAtualizarKeyPressed(evt);
            }
        });

        txtComplementoAtualizar.setBorder(javax.swing.BorderFactory.createTitledBorder("Complemento:"));
        txtComplementoAtualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtComplementoAtualizarKeyPressed(evt);
            }
        });

        txtRuaAtualizar.setBorder(javax.swing.BorderFactory.createTitledBorder("Rua:"));
        txtRuaAtualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRuaAtualizarKeyPressed(evt);
            }
        });

        txtCepAtualizar.setBorder(javax.swing.BorderFactory.createTitledBorder("CEP:"));
        txtCepAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCepAtualizarActionPerformed(evt);
            }
        });
        txtCepAtualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCepAtualizarKeyPressed(evt);
            }
        });

        txtStatusAtualizar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não atendido", "Em processo", "Atendido" }));
        txtStatusAtualizar.setBorder(javax.swing.BorderFactory.createTitledBorder("Status:"));
        txtStatusAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStatusAtualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtRuaAtualizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtIdAtualizar)
                            .addComponent(txtTelefoneAtualizar)
                            .addComponent(txtNomeAtualizar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCepAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCidadeAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtUFAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtStatusAtualizar, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtBairroAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtComplementoAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConfirmarAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnVoltarAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtIdAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomeAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelefoneAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtStatusAtualizar)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCepAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCidadeAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUFAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtRuaAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                            .addComponent(txtNumAtualizar)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 13, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBairroAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtComplementoAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnConfirmarAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnVoltarAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTelefoneAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefoneAtualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefoneAtualizarActionPerformed

    private void btnConfirmarAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarAtualizarActionPerformed
        //coletar o q foi digitado
        int id = Integer.parseInt(txtIdAtualizar.getText());
        String nome = txtNomeAtualizar.getText();
        String telefone = txtTelefoneAtualizar.getText();
        String endereco = "CEP: " + txtCepAtualizar.getText() + "\nCidade: " + txtCidadeAtualizar.getText() + "\nUF: " + txtUFAtualizar.getText() + "\nEndereço: " + txtRuaAtualizar.getText() + ", " + txtNumAtualizar.getText() + ", " + txtBairroAtualizar.getText() + "\n" + txtComplementoAtualizar.getText();
        String necessidades = txtNecessidadesAtualizar.getText();
        String status = txtStatusAtualizar.getSelectedItem().toString();

        try{
            Cidadaos cidadaos = new Cidadaos(id, nome, " ", telefone, endereco, necessidades, status);
            DAO dao = new DAO();
            dao.atualizar(cidadaos);
            dao.atualizarNecessidades(cidadaos);
            JOptionPane.showMessageDialog(null, "Pessoa atualizada!");
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Não foi possivel atualizar.");
        }
        CRUDTela t = new CRUDTela();
        t.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnConfirmarAtualizarActionPerformed

    private void btnVoltarAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarAtualizarActionPerformed
        //retorna a tela de CRUD
        CRUDTela t = new CRUDTela();
        t.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVoltarAtualizarActionPerformed

    private void txtIdAtualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdAtualizarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
          txtNomeAtualizar.requestFocus();  
        }
    }//GEN-LAST:event_txtIdAtualizarKeyPressed

    private void txtNomeAtualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeAtualizarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
          txtTelefoneAtualizar.requestFocus();  
        }
    }//GEN-LAST:event_txtNomeAtualizarKeyPressed

    private void txtTelefoneAtualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefoneAtualizarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
          txtCepAtualizar.requestFocus();  
        }
    }//GEN-LAST:event_txtTelefoneAtualizarKeyPressed

    private void txtNecessidadesAtualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNecessidadesAtualizarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
          String texto = txtNecessidadesAtualizar.getText();
          txtNecessidadesAtualizar.setText(texto + "; ");
        }
    }//GEN-LAST:event_txtNecessidadesAtualizarKeyPressed

    private void txtCidadeAtualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCidadeAtualizarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCidadeAtualizarKeyPressed

    private void txtBairroAtualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBairroAtualizarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtComplementoAtualizar.requestFocus();
        }
    }//GEN-LAST:event_txtBairroAtualizarKeyPressed

    private void txtNumAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumAtualizarActionPerformed

    }//GEN-LAST:event_txtNumAtualizarActionPerformed

    private void txtNumAtualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumAtualizarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtBairroAtualizar.requestFocus();
        }
    }//GEN-LAST:event_txtNumAtualizarKeyPressed

    private void txtUFAtualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUFAtualizarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUFAtualizarKeyPressed

    private void txtComplementoAtualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComplementoAtualizarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtNecessidadesAtualizar.requestFocus();
        }
    }//GEN-LAST:event_txtComplementoAtualizarKeyPressed

    private void txtRuaAtualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRuaAtualizarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtNumAtualizar.requestFocus();
        }
    }//GEN-LAST:event_txtRuaAtualizarKeyPressed

    private void txtCepAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCepAtualizarActionPerformed
        //AQUI VAI TER A API PEGANDO O DADO DE CEP COLOCADO E SETANDO OS OUTROS TEXTOS:
        try{
            ApiCEP apiCEP = new ApiCEP();
            EnderecoDto enderecoDto = apiCEP.getEndereco(txtCepAtualizar.getText());
            txtCidadeAtualizar.setText(enderecoDto.getLocalidade());
            txtUFAtualizar.setText(enderecoDto.getUf());
        } catch (IOException e){
            throw new RuntimeException(e);
        } catch (InterruptedException e) {
            throw new RuntimeException(e);
        }
    }//GEN-LAST:event_txtCepAtualizarActionPerformed

    private void txtCepAtualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCepAtualizarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtRuaAtualizar.requestFocus();
        }
    }//GEN-LAST:event_txtCepAtualizarKeyPressed

    private void txtUFAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUFAtualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUFAtualizarActionPerformed

    private void txtStatusAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStatusAtualizarActionPerformed

    }//GEN-LAST:event_txtStatusAtualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Atualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Atualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Atualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Atualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Atualizar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirmarAtualizar;
    private javax.swing.JButton btnVoltarAtualizar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBairroAtualizar;
    private javax.swing.JTextField txtCepAtualizar;
    private javax.swing.JTextField txtCidadeAtualizar;
    private javax.swing.JTextField txtComplementoAtualizar;
    private javax.swing.JTextField txtIdAtualizar;
    private javax.swing.JTextArea txtNecessidadesAtualizar;
    private javax.swing.JTextField txtNomeAtualizar;
    private javax.swing.JTextField txtNumAtualizar;
    private javax.swing.JTextField txtRuaAtualizar;
    private javax.swing.JComboBox<String> txtStatusAtualizar;
    private javax.swing.JTextField txtTelefoneAtualizar;
    private javax.swing.JTextField txtUFAtualizar;
    // End of variables declaration//GEN-END:variables

}
